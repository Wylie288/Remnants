<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.tutorial = -1
room_goto(rm_menu)
if global.tutorial = 0
room_goto(rm_tutorial)

if global.online = 0
    instance_destroy()
else
    get_record(global.uname)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if gotrecord != -1
{
    if record &gt; gotrecord
        send_record()
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_message("packet recieved")
type_event = ds_map_find_value(async_load, "type")
    switch (type_event)
    {
        case network_type_data:
            buffer = ds_map_find_value(async_load, "buffer")
            buffer_seek(buffer,buffer_seek_start,0)
            scr_packet_client(buffer)
        break;
            
    }

/*
if http = 1
{
ucheck = real(gsCheck_ID_Result());
if (ucheck = 0)
    {
    name_ok = 0
    do
    {
        if name_ok = 0
        global.uname = get_string("Insert your username.", "")
        if name_ok = 1
        global.uname = get_string(reason+"try again.", "")
        name_ok = 0
        file = file_text_open_read(working_directory + "Filter_Words.txt")
        repeat (729)
        {
            text = file_text_read_string(file)
            if string_pos(text,global.uname) != 0
            {
                name_ok = 1
                reason = "Cannot use the phrase "+chr(34)+text+chr(34)+" "
            }
            file_text_readln(file)
        }
        if global.uname = ""
        {
                name_ok = 1
                reason = "Must use at least 1 character"
        }
        if string_char_at(global.uname, 1) = " "
        {
                name_ok = 1
                reason = "Cannot start username with a space"
        }
        if string_length(global.uname) &gt; 15
        {
                name_ok = 1
                reason = "Your username cannot exceed 15 characters"
        }
        if name_ok = 0
        {
            regex_setinput(global.uname)
            regex_setexpression("[^a-zA-Z\d\s:]")
            if regex_search() = 1
            {
                name_ok = 1
                reason = "Cannot use special characters "
            }
        }
    file_text_close(file)
    }
    until (name_ok = 0);
    ini_open('gameSync.ini');
    ini_write_real('players','uid',real(global.uid))
    ini_write_string('players','uname',global.uname)
    ini_write_real('friends','0',real(global.uid))
    ini_write_string('friends','1',global.uname)
    ini_write_real('friends','n',1)
    ini_close();
    }
    http = 2
    gsPlayer_Highest_Score(global.uid);
    insertS = 0
    exit
}

if http = 2
{
    gsPlayer_Highest_Score_Result();
    if real(global.phighscore) &gt; -1
    {
    if real(global.phighscore) &lt; record
    insertS = gsInsert_Record_S(global.uname, string(record), global.uid);
    if record = -1
    insertS = gsInsert_Record_S(global.uname, string(0), global.uid);
    http = 3
    }
    else
    exit
}
if http = 3
{
    
    draw_set_valign(fa_top);
}
//
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_message("Client Started")
gotrecord = -1
hack_detected = 0
//alarm[0] = 100
global.pause_status = 0
global.aotd = ds_list_create()
ds_list_add(global.aotd, 1,2,3,4,5,7)
random_set_seed(ceil(date_get_day_of_year(date_current_datetime())))
ds_list_shuffle(global.aotd)
global.asteroid1 = ds_list_find_value(global.aotd, 1)
global.asteroid2 = ds_list_find_value(global.aotd, 2)
global.asteroid3 = ds_list_find_value(global.aotd, 3)

global.mcount = 0
global.fps_count = 0
global.fps_frames = 0
ini_open("save")
global.tutorial = ini_read_real("tutorial","tutorial",0)
global.vibrate = ini_read_real("options","vibrate",1)
global.tilt = ini_read_real("options","tilt",1)
global.controls = ini_read_real("options","controls",0)
global.simple_ui = ini_read_real("options","simple_ui",0)
global.particles = 1
global.debug = ini_read_real("options","debug",0)
global.tiltoffset = ini_read_real("options","tiltoffset",0)
global.tiltdeadzone = ini_read_real("options","tiltdeadzone",.07)
global.tiltfullspeed = ini_read_real("options","tiltfullspeed",.16)
global.touchline = ini_read_real("options","touchline",60)
global.touchline2 = ini_read_real("options","touchline2",360)
global.sound_effects = ini_read_real("options","soundeffects",1)
global.sound_ambience = ini_read_real("options","soundambience",1)
global.sound_music = ini_read_real("options","soundmusic",1)
global.asteroids = ini_read_real("options","asteroids",1)
if global.sound_music = 1
audio_play_sound(snd_music,1,1)
global.areas_unlocked = ini_read_real("areas","unlocked",1)
global.money = ini_read_real("money","ingame",0)
global.junk = ini_read_real("junk","ingame",0)

global.rocket_system = ini_read_real("tech","rocket_system",0)
global.shield_system = ini_read_real("tech","shield_system",0)
global.ship_speed = ini_read_real("tech","ship_speed",10)
global.reload_time = ini_read_real("tech","reload_time",500)
global.homing_rocket = ini_read_real("tech","homing_rocket",0)
global.mineral_attract = ini_read_real("tech","mineral_attract",0)
global.junk_attract = ini_read_real("tech","junk_attract",0)
global.shield_overload = ini_read_real("tech","shield_overload",0)
global.fourth_rocket = ini_read_real("tech","fourth_rocket",0)
global.drone = ini_read_real("tech","drone",0)
global.power_ups = ini_read_real("tech","power_ups",0)
global.warp_drive = ini_read_real("tech","warp_drive",0)
global.weapon = ini_read_real("tech","weapon",0)
global.laser_system = ini_read_real("tech","laser_system",0)
global.laser_gimbal = ini_read_real("tech","laser_gimbal",0)
global.cannon_system = ini_read_real("tech","cannon_system",0)
global.cannon_gimbal = ini_read_real("tech","cannon_gimbal",0)
global.cannon_burst = ini_read_real("tech","cannon_burst",0)
global.gimbal = ini_read_real("tech","gimbal",0)

global.selected_ship = ini_read_real("ship","selected",0)
global.random_ship = ini_read_real("ship","random",0)
record = ini_read_real("record","1",0)
if record = 0
{
ini_write_real("record","1",0)
record = -1
}

encoded = ini_read_string("record2","1","0")
if ini_section_exists("record2")
{
    encoded = (real(base64_decode(encoded)) - record - 777) / record
    if (record = encoded) = 0
        hack_detected /= 0
}
else
{
    if record = -1
    {
   encoded = base64_encode(string((record*record)+record+777))
    ini_write_string("record2",'1',encoded)
    }
    else
    hack_detected /= 0
}

ini_close()

ini_open("ship")
num = ini_read_real("num","num",0)
ini_write_real("1","hull",0)
ini_write_real("1","wings",0)
ini_write_real("1","color",-1)
ini_write_real("1","engine",0)
ini_write_real("num","num",1)
ini_close()

if os_type = os_android
application_surface_enable(0);
os_powersave_enable(0)
randomize()
global.pause = 0
global.testtech = 0
global.testareas = 0
global.prev_distance = 0
global.area = 1
global.board = 0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Leaderboard
global.online = 0
if os_is_network_connected()
{   
    alarm[0] = 240
    type = network_socket_tcp

    size = 1024
    type = buffer_fixed
    alignment = 1
    global.buffer = buffer_create(size,type,alignment)
    
    ip = "184.18.55.74"//"127.0.0.1" //"184.18.52.116"
    port = 8330
    global.socket = network_create_socket(type)
    network_set_config(network_config_connect_timeout,240)
    connection = network_connect(global.socket, ip, port)
}
else
{
    alarm[0] = 1
}

/*
idc = 1
global.phighscore = -1

if os_is_network_connected()
{
randomize();
ini_open("gameSync.ini")
global.uid = ini_read_real('players','uid',0);
if global.uid &gt; 0
{
    global.uname = ini_read_string('players','uname',"nameless")
    if ini_read_string("friends","1","") = ""
    {
    ini_write_real('friends','0',real(global.uid))
    ini_write_string('friends','1',global.uname)
    ini_write_real('friends','n',1)
    }
}
else
{
    global.uid = gsCreate_ID(11)
}
gsCheck_ID(global.uid);
ini_close()
global.lista = 0;
global.listb = 1;
global.listc = 0;
global.listd = 0;
global.liste = 0;
alarm[0] = 240
http = 1
global.online = 1
}
else //offline
{
global.online = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
