<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ship1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialization
horspeed = global.ship_speed/2 + 3
moveto = x
dir = 0
liney = 400
lineyr = 400
image_speed = 0
simple_ui_offset = 0

ini_open("save")
num = ini_read_real("ship","ship",-1)
ini_close()

ini_open("ship")
hull = ini_read_real(string(num),"hull",0)
wings = ini_read_real(string(num),"wings",0)
color = ini_read_real(string(num),"color",image_blend)
engine = ini_read_real(string(num),"engine",0)
ini_close()
engine = 0

if color = -1
color = image_blend
if color = 0
color = make_color_rgb(10,115,150) //Blue
if color = 1
color = make_color_rgb(150,10,10) //Red
if color = 2
color = make_color_rgb(60,60,60) //Grey
if color = 3
color = make_color_rgb(85,125,15) //Green
if color = 4
color =  make_color_rgb(115,10,150) //Purple

engine1mod = 0
if hull = 4
engine1mod = -16

engine2mod = 0
if wings = 3
engine2mod = -12

if wings = 1
engine = 0


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fire Effect
spotX = phy_position_x
spotY = phy_position_y

flow = part_system_create();
flow2 = part_system_create();
flow3 = part_system_create();
flame = part_type_create();
smoke = part_type_create();

part_type_shape(flame,pt_shape_flare) // the fire
part_type_size(flame,0.5,0.8,0.40,0)
part_type_scale(flame,0.10,0.10)
part_type_color3(flame,c_white,c_yellow,c_red)

part_type_alpha3(flame,1,0.70,.30)
part_type_speed(flame,0.20,0.50,0,0)
part_type_direction(flame,0,359,0,20)
part_type_gravity(flame,.8,270)
part_type_orientation(flame,0,180,0,0,1)

part_type_blend(flame,1)
part_type_life(flame,1,40)

part_type_shape(smoke,pt_shape_smoke) // where there's fire, there's smoke
part_type_size(smoke,1,1,0,0)
part_type_scale(smoke,0.25,0.25)
part_type_color2(smoke,c_gray, c_black)
part_type_alpha3(smoke,0.30,0.2,0.1)
part_type_speed(smoke,0.25,0.25,0,0)
part_type_direction(smoke,0,359,0,0)
part_type_gravity(smoke,.8,270)
part_type_orientation(smoke,0,359,0,1,1)

part_type_blend(smoke,0)
part_type_life(smoke,60,60)

part_type_death(flame,1,smoke)
if global.particles = 1
{
wound = part_emitter_create(flow);
wound2 = part_emitter_create(flow2);
wound3 = part_emitter_create(flow3);
part_system_depth(flow, 0);
part_system_depth(flow2, 0);
part_system_depth(flow3, 0);

part_emitter_region(flow,wound,spotX-6,spotX+14,spotY+30,spotY+50,ps_shape_line ,ps_distr_gaussian);
part_emitter_region(flow2,wound2,spotX-36,spotX-24,spotY+15,spotY+35,ps_shape_line ,ps_distr_gaussian);
part_emitter_region(flow3,wound3,spotX+24,spotX+44,spotY+15,spotY+35,ps_shape_line ,ps_distr_gaussian);
if engine = 0
part_emitter_stream(flow,wound,flame,3);
if engine = 2
part_emitter_stream(flow,wound,flame,3);
if engine &gt; 0
part_emitter_stream(flow2,wound2,flame,1);
if engine &gt; 0
part_emitter_stream(flow3,wound3,flame,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.particles = 1
{
spotX = phy_position_x
spotY = phy_position_y
part_emitter_region(flow,wound,spotX-6,spotX+14,spotY+30+engine1mod,spotY+50+engine1mod,ps_shape_line ,ps_distr_gaussian);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tilt Movement
//TIlt Movement
//audio_stop_sound(snd_side_thruster)
dir = 0
if global.pause = 0
{
avs_calculate()

if global.tilt = 1
{
mult = 100 / (global.tiltfullspeed * 100)

//Right
if device_get_tilt_x()-global.tiltoffset &lt; -1 * global.tiltdeadzone
    if device_get_tilt_x()-global.tiltoffset &gt; -1 * global.tiltfullspeed
        if place_free(x+horspeed,y)
        {
        if simple_ui_offset &gt; -8
        simple_ui_offset -= 2
        phy_position_x -= horspeed * ((device_get_tilt_x()-global.tiltoffset)*mult)
        dir = 2
        }
if device_get_tilt_x()-global.tiltoffset &lt; -1 * global.tiltfullspeed
    if place_free(x+horspeed,y)
    {
        if simple_ui_offset &gt; -8
        simple_ui_offset -= 2
        phy_position_x += horspeed
        dir = 2

    }
//Left
if device_get_tilt_x()-global.tiltoffset &gt; global.tiltdeadzone
    if device_get_tilt_x()-global.tiltoffset &lt; global.tiltfullspeed
        if place_free(x-horspeed,y)
        {
        if simple_ui_offset &lt; 8
            simple_ui_offset += 2
        phy_position_x -= horspeed * ((device_get_tilt_x()-global.tiltoffset)*mult)
        dir = 1
        }
if device_get_tilt_x()-global.tiltoffset &gt; global.tiltfullspeed
    if place_free(x-horspeed,y)
    {
        if simple_ui_offset &lt; 8
            simple_ui_offset += 2
        phy_position_x -= horspeed
        dir = 1
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Non Touch Controls
if global.tilt = 0
if global.controls = 2 //Tap
{
    if x - horspeed &gt; moveto
    {
    if simple_ui_offset &lt; 8
    simple_ui_offset += 2
    phy_position_x -= horspeed
    dir = 1
    }
    
    if x + horspeed &lt; moveto
    {
    if simple_ui_offset &gt; -8
    simple_ui_offset -= 2
    phy_position_x += horspeed
    dir = 2
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>visible = obj_calibrate_default.test_ship
if obj_calibrate_default.test_ship = 0
phy_position_x = 360
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision Handle
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Non Touch Controls
if global.tilt = 0
if global.controls = 2 //Tap
{
if mouse_y &gt; y - global.touchline
{
if mouse_x &lt; x - horspeed
    moveto = mouse_x
if mouse_x &gt; x + horspeed
    moveto = mouse_x
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Non-Touch Controls
if global.tilt = 0
{

if global.controls = 0 //Ship Side
{
if mouse_y &gt; y - global.touchline
{
if mouse_x &lt; x -5
if place_free(x-horspeed,y)
    {
    if simple_ui_offset &lt; 8
    simple_ui_offset += 2
    phy_position_x -= horspeed
    dir = 1
    }
if mouse_x &gt; x +5
if place_free(x+horspeed,y)
    {
    if simple_ui_offset &gt; -8
    simple_ui_offset -= 2
    phy_position_x += horspeed
    dir = 2
    }
}
}

if global.controls = 1 //Split Screen
{
if mouse_y &gt; y - global.touchline
{
if mouse_x &lt; global.touchline2
if place_free(x-horspeed,y)
    {
    if simple_ui_offset &lt; 8
    simple_ui_offset += 2
    phy_position_x -= horspeed
    dir = 1
    }
if mouse_x &gt; global.touchline2
if place_free(x+horspeed,y)
    {
    if simple_ui_offset &gt; -8
    simple_ui_offset -= 2
    phy_position_x += horspeed
    dir = 2
    }
}
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.particles = 1
{
if part_system_exists(flow)
    part_emitter_destroy(flow, wound);
if part_system_exists(flow2)
    part_emitter_destroy(flow2, wound2);
if part_system_exists(flow3)
    part_emitter_destroy(flow3, wound3);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>112</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_wrap</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_ship1,dir,x,y)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>61,23</point>
    <point>111,77</point>
    <point>10,77</point>
  </PhysicsShapePoints>
</object>
